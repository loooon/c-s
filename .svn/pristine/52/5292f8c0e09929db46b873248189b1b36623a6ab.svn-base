package com.credit.web.controller.open.blackbox;

import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import javax.servlet.http.HttpServletRequest;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.io.Charsets;
import org.apache.commons.io.IOUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.SystemUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;

import com.alibaba.fastjson.JSONArray;
import com.credit.common.exception.ServiceException;
import com.credit.web.controller.open.blackbox.bean.CallDetail;
import com.credit.web.controller.open.blackbox.bean.Result;

/**
 * Created by wangjunling on 2017/3/8.
 */

@Controller
public class GrayscaleController
{

    private Logger logger = LoggerFactory.getLogger(GrayscaleController.class);

    @RequestMapping(value = "/service", method = RequestMethod.POST, params = "t=grayscale")// params多个参数params={"t=1","c=2"}
    @ResponseBody
    public Result service(String phone, String name, String idcard, String imei, String sim,
            @RequestParam(name = "apply_date") String applyDate,
            @RequestParam(name = "call_details") String callDetails, HttpServletRequest request)
    {

        try
        {
            List<CallDetail> callDetailList;
            if (StringUtils.isBlank(callDetails))
            {
                callDetailList = readFile(request);
            }
            else
            {
                List<JSONObject> jsonObjectList = JSONArray.parseArray(callDetails, JSONObject.class);
				callDetailList = jsonObjectList.stream().map(CallDetail::toEntity).collect(Collectors.toList());
			}
            boolean checkParam = checkParame(phone, applyDate, callDetailList);

            if (!checkParam)
            {
                return new Result().paramError();
            }

            // todo

            return new Result().success();
        }
        catch (ServiceException e)
        {
            logger.error("染黑度接口调用异常", e);
            return new Result().error();
        }

    }

    private boolean checkParame(String phone, String applyDate, List<CallDetail> callDetailList)
    {
        return StringUtils.isBlank(phone) && StringUtils.isBlank(applyDate) && CollectionUtils.isEmpty(callDetailList);
    }

    private List<CallDetail> readFile(HttpServletRequest request) throws ServiceException
    {
        CommonsMultipartResolver commonsMultipartResolver = new CommonsMultipartResolver(request.getSession()
                .getServletContext());
        commonsMultipartResolver.setDefaultEncoding("utf-8");

        if (commonsMultipartResolver.isMultipart(request))
        {
            MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest) request;

            MultipartFile file = multiRequest.getFile("call_details");
            try
            {
                List<String> strings = IOUtils.readLines(file.getInputStream(), Charsets.UTF_8);
                return strings.stream().map(s -> s.split("\t")).filter(strings1 -> strings1.length > 6)
                        .map(CallDetail::toEntity).collect(Collectors.toList());

            }
            catch (Exception e)
            {
                logger.error("读取文件异常", e);
                throw new ServiceException("读取详单文件异常");
            }
        }
        return null;
    }

}
