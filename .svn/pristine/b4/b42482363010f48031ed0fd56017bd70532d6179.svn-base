package com.credit.web.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import com.credit.common.exception.ServiceException;
import com.credit.common.util.str.StringValidator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.StringUtils;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.credit.common.result.ResultJson;
import com.credit.common.web.session.UserSession;
import com.credit.common.web.session.UserSessionFactory;
import com.credit.entity.User;
import com.credit.service.UserService;
import com.credit.web.model.UserLogin;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by Michael Chan on 3/8/2017.
 */
@Controller
public class LoginController extends AbstractBaseController
{
    @Autowired
    UserService userService;

    @RequestMapping("/login")
    public String signIn()
    {
        return "login";
    }

    @RequestMapping("/logout")
    public String signOut()
    {
        String redirectUrl = "login";
        return "redirect:" +redirectUrl;
    }

    @RequestMapping(value = "/ajaxLogin",method = RequestMethod.POST)
    @ResponseBody
    public ResultJson ajaxLogin(@Valid UserLogin userReg, BindingResult bindingResult, Model model,
            HttpServletRequest request, HttpSession session)
    {
        if (bindingResult.hasErrors())
        {
           return new ResultJson().error(ResultJson.STATUS_CODE_PARAM_ERROR,"登陆信息不完整");
        }
        try
        {
            User user = new User();
            user.setUserName(userReg.getName());
            user.setPassword(userReg.getPassword());
            user = userService.login(user);
            if (user == null)
            {
                return new ResultJson().error(ResultJson.STATUS_CODE_PARAM_ERROR,"您输入的密码错误！");
            }
            setUserSession(user, model, request);
            UserSession userSession = UserSessionFactory.getUserSession(session);
            UserSessionFactory.updateUserSession(session, userSession);
            return new ResultJson().success(user);
        }
        catch (Exception e)
        {
            logger.error(e.getMessage(), e);
            return new ResultJson().error(ResultJson.STATUS_CODE_EXCEPTION,e.getMessage());
        }
    }

    @ResponseBody
    @RequestMapping("/exist")
    public boolean exist(String username)
    {
        if (null == username || "".equals(username))
        {
            return false;
        }
        try
        {
            if (userService.searchUserByName(username) != null)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        catch (Exception e)
        {
            logger.error(e.getMessage(), e);
            return false;
        }
    }
}
