package com.credit.web.interceptor;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.io.IOUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import com.alibaba.fastjson.JSON;
import com.credit.common.result.ResultJson;
import com.credit.entity.UserPermission;
import com.credit.service.UserPermissionService;

/**
 * Created by Michael Chan on 3/31/2017.
 */
public class AccessLimitInterceptor extends HandlerInterceptorAdapter
{
    public static final Logger logger = LoggerFactory.getLogger(AccessLimitInterceptor.class);

    @Resource
    private UserPermissionService<UserPermission> userPermissionService;

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception
    {
        String vKeyValues = request.getParameter("vkey");
        String tValues = request.getParameter("t");
        List<UserPermission> userPermissions = userPermissionService.searchPermissionByVKey(vKeyValues);
        String permittedUri = "";
        if (CollectionUtils.isEmpty(userPermissions) || userPermissions.get(0).getSiteResource() == null)
        {
            isPermitted(response);
        }
        permittedUri = userPermissions.get(0).getSiteResource().getResourcePath();
        String requestUri = request.getServletPath();
        if (!tValues.trim().equals(""))
        {
            requestUri += "?t=" + tValues;
        }
        if (!permittedUri.equals(requestUri))
        {
            isPermitted(response);
        }
        return true;
    }

    private boolean isPermitted(HttpServletResponse response)
    {
        PrintWriter writer = null;
        try
        {
            writer = response.getWriter();
            writer.write(JSON.toJSONString(new ResultJson().notAuth("很抱歉，您所请求的接口还未被授权。")));
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        finally
        {
            if (writer != null)
                IOUtils.closeQuietly(writer);
        }
        return false;
    }
}
