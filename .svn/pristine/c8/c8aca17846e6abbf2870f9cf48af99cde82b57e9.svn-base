package com.credit.web.controller;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.alibaba.fastjson.JSONArray;
import com.credit.common.util.NumberFormat;
import com.credit.common.util.time.TimeUtil;
import com.credit.entity.Applicant;
import com.credit.entity.PhoneSegmentInfo;
import com.credit.service.PhoneSegmentInfoService;
import com.credit.web.model.ContactCheck;
import com.credit.web.model.GrayscaleModel;
import com.credit.web.util.CallDetailUtil;
import com.credit.web.util.GrayscaleUtil;

/**
 * Created by wangjunling on 2017/3/8.
 */

@Controller
@RequestMapping("/grayscale")
public class GrayscaleController extends AbstractBaseController
{

    private Logger logger = LoggerFactory.getLogger(GrayscaleController.class);

    @Resource
    private PhoneSegmentInfoService phoneSegmentInfoService;

    @RequestMapping(value = "/report", method = RequestMethod.POST)
    public String service(String phone, String name, String idcard, String applyDateStr, String fileCharset,
            List<ContactCheck> contactCheckList, HttpServletRequest request, Model model)
    {
        String ERROR_VIEW = "error";
        if (StringUtils.isBlank(phone))
        {
            model.addAttribute("errorMsg", "手机号码为空");
            return ERROR_VIEW;
        }
        if (StringUtils.isBlank(applyDateStr))
        {
            model.addAttribute("errorMsg", "申请时间为空");
            return ERROR_VIEW;
        }
        Applicant applicant = new Applicant();
        try
        {
            String tagPhoneNumber = NumberFormat.formatNumber(phone);
            if (!NumberFormat.isPhoneNumber(tagPhoneNumber))
            {
                logger.debug("输入申请人电话号码:" + phone + ",转换后的号码" + tagPhoneNumber);
                model.addAttribute("errorMsg", "申请人电话号码[" + phone + "]不正确");
                return ERROR_VIEW;
            }
            applicant.setPhone(tagPhoneNumber);
        }
        catch (Exception e)
        {
            logger.warn("申请人电话号码[" + applicant.getPhone() + "]不正确:", e);
            model.addAttribute("errorMsg", "申请人电话号码[" + applicant.getPhone() + "]不正确");
            return ERROR_VIEW;
        }
        try
        {
            Date applyDate = TimeUtil.parse(applyDateStr, "yyyy-MM-dd");
            applicant.setApplyDate(applyDate);
        }
        catch (Exception e)
        {
            logger.warn("申请时间[" + applyDateStr + "]格式不正确");
            model.addAttribute("errorMsg", "申请时间[" + applyDateStr + "]格式不正确");
            return ERROR_VIEW;
        }
        applicant.setIdcard(idcard);
        applicant.setAname(name);
        List<String> errMsgList;
        try
        {
            errMsgList = CallDetailUtil.readCallDetailFile(applicant, fileCharset, request);
        }
        catch (Exception e)
        {
            logger.error("读取详单文件异常", e);
            model.addAttribute("errorMsg", e.getMessage());
            return ERROR_VIEW;
        }

        if (CollectionUtils.isEmpty(applicant.getCallDetailsList()))
        {
            if (CollectionUtils.isEmpty(errMsgList))
            {
                model.addAttribute("errorMsg", "申请人详单内容为空");
                return ERROR_VIEW;
            }
            model.addAttribute("errorMsg", JSONArray.toJSONString(errMsgList));
            return ERROR_VIEW;
        }

        GrayscaleModel grayscaleModel = new GrayscaleModel();
        grayscaleModel.setContactCheck(contactCheckList);
        PhoneSegmentInfo phoneSegmentInfo = phoneSegmentInfoService.searchByPhone(applicant.getPhone());
        try
        {
            GrayscaleUtil.buildGrayscaleModel(grayscaleModel, applicant, phoneSegmentInfo);
        }
        catch (Exception e)
        {
            logger.error("详单统计错误", e.getMessage());
        }
        model.addAttribute("grayscaleModel", grayscaleModel);
        return "report";

    }
}
